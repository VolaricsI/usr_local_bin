#!/bin/bash
#	Created Volarics Istvan by Voli; volaricsi@volarics.hu

#:::::: Fix beallitasok :::::::
SNAP_DIR=SnapShot 					## Ebben a könyvtárban kerülnek tárolásra a pillanatképek
LOG_FILE=/var/log/btrfs_snapper.log			## Ide készül napló ha kérted
#:::::: Beallitasok :::::::::::
DEV=$1							## Melyik meghajtóval foglalkozunk
MODE=$2							## Milyen pillanatképet készítünk
DEV_Neve=${DEV//\//.} 			## Ha át akarod írni bash-ról sh-ra: $( echo ${DEV}|sed 's/\//./g' )
DIR="/mnt/${DEV_Neve}" 			## Ide történik a felcsatolás

case ${MODE} in
	(oras) 	Count=$( date +%H )
	    ;;
	(heti) 	Count=$( date +%w )
	    ;;
	(napi) 	Count=$( date +%d )
	    ;;
	(hetes) Count=$( date +%U )
	    ;;
	(havi) 	Count=$( date +%m )
	    ;;
	(*) 	echo "Usage: $0 DEV [oras(24)|heti(7)|hetes(52)|napi(31)|havi(12)]"
		exit 1
	    ;;
esac

#:::::::: Start :::::::::::::::
	StartTime=$( date +%s )								## Kell a futási idő számításhoz

	if [ ! -e ${DEV} ]; then echo "Nem létező device: ${DEV}..."; exit 1; fi

	if [ -e ${DIR} ]; then
		echo "létező könyvtár: ${DIR}..."
		rmdir ${DIR} 2>&1
		if [ $? != 0 ]; then echo "Nem sikerült letörölni...."; exit 1; fi
	fi

	mkdir ${DIR} 2>&1
	mount ${DEV} ${DIR} -o subvol=/
	mountpoint -q ${DIR}
	if [ $? != 0 ]; then echo "Nem sikerült csatolni: ${DIR}."; exit 1; fi 		## Sikertelen csatolás

	[ ! -e ${DIR}/${SNAP_DIR}/${MODE} ] && mkdir -p ${DIR}/${SNAP_DIR}/${MODE} 		## Legyen meg a könyvtár structura ahova mentek
	CurDir="${DIR}/${SNAP_DIR}/${MODE}" 							## Itt fogok dolgozni
	LogFile="${CurDir}/${Count}.log"							## Ide fogok Naplózni
	date 			>${LogFile}							## Most kezdek kezdek

	for dir in $( find ${CurDir} -maxdepth 1 -type d -printf "%f\n" |grep "^${Count}-" ) ; do		## A régi mind törölve
		btrfs su del ${CurDir}/${dir} 	>>${LogFile}
	done

	Vols=$( btrfs sub list ${DIR}| grep -v ${SNAP_DIR} | cut -d ' ' -f9  ) 			## Minden subvol-ról mentés
	for Vol in ${Vols} ; do
		Vold=${Vol//\//.}
		btrfs sub snap -r ${DIR}/${Vol} ${CurDir}/${Count}-${Vold} 	>>${LogFile}
	done

	eval NemKell='$'NEMKELL_${MODE} 									## A kivételeket letörlöm mert nem kellenek...
	for kimarad in ${NemKell} ${NEMKELL} ; do
		[ -d ${CurDir}/${Count}-${kimarad} ] && btrfs sub del ${CurDir}/${Count}-${kimarad} 	>>${LogFile}
	done

	eval NemKell='$'NEMKELL_${MODE}_kezd 									## Így kezdődő snapshot-okat is törlöm
	for kimarad in ${NemKell} ${NEMKELL_kezd}; do
		for dir in $( find ${CurDir} -maxdepth 1 -type d -printf "%f\n" |grep "${Count}-${kimarad}" ) ; do
			btrfs su del ${CurDir}/$dir 	>>${LogFile}
		done
	done

	btrfs su sync ${DIR} 						>>${LogFile}				## A változásokat kiszinkronizálom
	date 								>>${LogFile}				## Itt a vége
	RunTime=$[ $( date +%s )  - ${StartTime} ] 								## Ennyi ideig dolgoztam
	[ ${RunTime} -lt 100 ] && RunTime=" ${RunTime}" ; [ ${RunTime} -lt 10 ] && RunTime=" ${RunTime}" 	## Az igazítás miatt kell
	echo "Futási idő: ${RunTime} sec."	>>${LogFile}

	umount ${DIR} 				## Felszámolom a környezetet
	rmdir  ${DIR}

	[ ".$BTRFS_SNAP_time" != "." ] && echo "Futási idő (${DEV}) : ${RunTime} sec." 					## Csak tesztelés idejére
	[ ".$BTRFS_SNAP_log"  != "." ] && date "+%Y.%m.%d-%H:%M ==> ${DEV} : ${RunTime} sec." 	>>${LOG_FILE}		## Nappló a későbbre

exit 0
